# Chart releaser responsible for publishing charts to GitHub Pages
name: "MLAPI Release Charts"

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      pull-requests: read
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    env:
      GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        with:
          config: ../cr.yaml
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      
      - name: Extract Helm Chart version
        id: extract_chart_version
        run: |
          CHART_VERSION=$(helm show chart ./charts | awk '/version:/ { print $2 }')
          echo "CHART_VERSION=${CHART_VERSION}" >> "${GITHUB_ENV}"

      - id: release
        uses: rymndhng/release-on-push-action@master
        with:
          bump_version_scheme: minor
          tag_prefix: v
            
      - name: Check Output Parameters
        run: |
          echo "Got tag name ${{ steps.release.outputs.tag_name }}"
          echo "Got release version ${{ steps.release.outputs.version }}"
          echo "Upload release artifacts to ${{ steps.release.outputs.upload_url }}"

      # - name: Create Release Tag
      #   id: prepare_tag
      #   if: startsWith(github.ref, 'refs/tags/')
      #   run: |
      #     TAG_NAME=$(echo "${GITHUB_REF#refs/tags/}")
      #     echo "DEPLOY_TAG_NAME=deploy-${TAG_NAME}" >> "${GITHUB_OUTPUT}"
          
      - name: Publish to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          tag_name: ${{ steps.prepare_tag.outputs.DEPLOY_TAG_NAME }}
          tag_message: 'Deployment ${{ github.ref_name }}'
